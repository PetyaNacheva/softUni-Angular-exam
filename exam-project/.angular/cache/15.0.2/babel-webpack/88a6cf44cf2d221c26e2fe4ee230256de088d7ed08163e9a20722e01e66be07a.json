{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { MessageType } from 'src/app/core/message-bus.service';\n// import { ingredientsValidator, urlValidator } from '../utils';\nlet MoviesNewPageComponent = class MoviesNewPageComponent {\n  constructor(formBuilder, router, movieService, messageBus) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.movieService = movieService;\n    this.messageBus = messageBus;\n    this.movieFormGroup = this.formBuilder.group({\n      // 'recipeName': new FormControl('', [Validators.required, Validators.minLength(3)]),\n      // 'imgUrl': new FormControl('', [Validators.required, urlValidator]),\n      // 'description': new FormControl('', [Validators.required, Validators.minLength(10)]),\n      // 'ingredients': new FormControl('', [Validators.required, ingredientsValidator])\n    });\n  }\n  ngOnInit() {\n    // console.log(this.makeUpdate)\n    // console.log(this.recipeToUpdate)\n    if (this.makeUpdate) {\n      this.formName = 'Edit Movie';\n      this.formBtnName = 'Save';\n      //   this.recipeFormGroup.controls['recipeName'].setValue(this.recipeToUpdate.recipeName);\n      //   this.recipeFormGroup.controls['imgUrl'].setValue(this.recipeToUpdate.imgUrl);\n      //   this.recipeFormGroup.controls['description'].setValue(this.recipeToUpdate.description);\n      //   this.recipeFormGroup.controls['ingredients'].setValue(this.recipeToUpdate.ingredients.join(',\\n'));\n    } else {\n      this.formName = 'Add New Movie';\n      this.formBtnName = 'Add Movie';\n    }\n  }\n  handleCreateMovie() {\n    // Transform ingridients to array\n    // if (this.recipeFormGroup.value.ingredients.includes(',\\n')) {\n    //   this.recipeFormGroup.value.ingredients = this.recipeFormGroup.value.ingredients.split(',\\n');\n    // }\n    // this.recipeFormGroup.value.recipeName = this.recipeFormGroup.value.recipeName.trim();\n    // this.recipeFormGroup.value.description = this.recipeFormGroup.value.description.trim();\n    // this.recipeFormGroup.value.imgUrl = this.recipeFormGroup.value.imgUrl.trim();\n    // Editing mode\n    if (this.makeUpdate) {\n      // console.log('update');\n      // console.log(this.recipeFormGroup.value);\n      this.movieService.updateMovie$(this.recipeToUpdate._id, this.movieFormGroup.value).subscribe({\n        next: movie => {\n          // console.log(recipe._id);\n          this.router.navigateByUrl(`/RefreshComponent`, {\n            skipLocationChange: true\n          }).then(() => {\n            this.router.navigate(['/movies', movie._id]);\n          });\n          this.messageBus.notifyForMessage({\n            text: 'User successfully updated movie!',\n            type: MessageType.Success\n          });\n        },\n        error: err => {\n          console.log('Error is ', err.error.message);\n          // this.errorMessage = err.error.message;\n          this.messageBus.notifyForMessage({\n            text: err.error.message,\n            type: MessageType.Error\n          });\n        }\n      });\n      // Creating mode\n    } else {\n      // console.log('form: ', this.recipeFormGroup.value);\n      this.movieService.addMovie$(this.movieFormGroup.value).subscribe({\n        next: movie => {\n          // console.log(recipe);\n          this.router.navigate(['/movies', movie._id]);\n          this.messageBus.notifyForMessage({\n            text: 'User successfully create new movie!',\n            type: MessageType.Success\n          });\n        },\n        error: error => {\n          console.error(error);\n        }\n      });\n    }\n  }\n};\n__decorate([Input()], MoviesNewPageComponent.prototype, \"makeUpdate\", void 0);\n__decorate([Input()], MoviesNewPageComponent.prototype, \"recipeToUpdate\", void 0);\nMoviesNewPageComponent = __decorate([Component({\n  selector: 'app-movies-new-page',\n  templateUrl: './movies-new-page.component.html',\n  styleUrls: ['./movies-new-page.component.css']\n})], MoviesNewPageComponent);\nexport { MoviesNewPageComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","MessageType","MoviesNewPageComponent","constructor","formBuilder","router","movieService","messageBus","group","ngOnInit","makeUpdate","formName","formBtnName","handleCreateMovie","updateMovie$","recipeToUpdate","_id","movieFormGroup","value","subscribe","next","movie","navigateByUrl","skipLocationChange","then","navigate","notifyForMessage","text","type","Success","error","err","console","log","message","Error","addMovie$","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\feature\\movies\\movies-new-page\\movies-new-page.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { IMovie } from 'src/app/core/interfaces';\r\nimport { MessageBusService, MessageType } from 'src/app/core/message-bus.service';\r\nimport { MovieService } from 'src/app/core/movie.service';\r\n// import { ingredientsValidator, urlValidator } from '../utils';\r\n\r\n@Component({\r\n  selector: 'app-movies-new-page',\r\n  templateUrl: './movies-new-page.component.html',\r\n  styleUrls: ['./movies-new-page.component.css']\r\n})\r\nexport class MoviesNewPageComponent implements OnInit {\r\n\r\n  @Input() makeUpdate: boolean;\r\n  @Input() recipeToUpdate: IMovie;\r\n\r\n  formName: string;\r\n  formBtnName: string;\r\n\r\n  movieFormGroup: FormGroup = this.formBuilder.group({\r\n    // 'recipeName': new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n    // 'imgUrl': new FormControl('', [Validators.required, urlValidator]),\r\n    // 'description': new FormControl('', [Validators.required, Validators.minLength(10)]),\r\n    // 'ingredients': new FormControl('', [Validators.required, ingredientsValidator])\r\n  })\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private movieService: MovieService,\r\n    private messageBus: MessageBusService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.makeUpdate)\r\n    // console.log(this.recipeToUpdate)\r\n\r\n    if (this.makeUpdate) {\r\n      this.formName = 'Edit Movie';\r\n      this.formBtnName = 'Save';\r\n    //   this.recipeFormGroup.controls['recipeName'].setValue(this.recipeToUpdate.recipeName);\r\n    //   this.recipeFormGroup.controls['imgUrl'].setValue(this.recipeToUpdate.imgUrl);\r\n    //   this.recipeFormGroup.controls['description'].setValue(this.recipeToUpdate.description);\r\n    //   this.recipeFormGroup.controls['ingredients'].setValue(this.recipeToUpdate.ingredients.join(',\\n'));\r\n    } else {\r\n      this.formName = 'Add New Movie';\r\n      this.formBtnName = 'Add Movie';\r\n    }\r\n  }\r\n\r\n\r\n  handleCreateMovie() {\r\n\r\n    // Transform ingridients to array\r\n    // if (this.recipeFormGroup.value.ingredients.includes(',\\n')) {\r\n    //   this.recipeFormGroup.value.ingredients = this.recipeFormGroup.value.ingredients.split(',\\n');\r\n    // }\r\n    // this.recipeFormGroup.value.recipeName = this.recipeFormGroup.value.recipeName.trim();\r\n    // this.recipeFormGroup.value.description = this.recipeFormGroup.value.description.trim();\r\n    // this.recipeFormGroup.value.imgUrl = this.recipeFormGroup.value.imgUrl.trim();\r\n\r\n    // Editing mode\r\n    if (this.makeUpdate) {\r\n      // console.log('update');\r\n      // console.log(this.recipeFormGroup.value);\r\n\r\n      this.movieService.updateMovie$(this.recipeToUpdate._id, this.movieFormGroup.value).subscribe({\r\n        next: movie => {\r\n          // console.log(recipe._id);\r\n          this.router.navigateByUrl(`/RefreshComponent`, { skipLocationChange: true }).then(() => {\r\n            this.router.navigate(['/movies', movie._id]);\r\n          });\r\n\r\n          this.messageBus.notifyForMessage({\r\n            text: 'User successfully updated movie!',\r\n            type: MessageType.Success\r\n          })\r\n        },\r\n        error: (err) => {\r\n          console.log('Error is ', err.error.message)\r\n          // this.errorMessage = err.error.message;\r\n          this.messageBus.notifyForMessage({\r\n            text: err.error.message,\r\n            type: MessageType.Error\r\n          })\r\n        }\r\n      })\r\n\r\n      // Creating mode\r\n    } else {\r\n      // console.log('form: ', this.recipeFormGroup.value);\r\n\r\n      this.movieService.addMovie$(this.movieFormGroup.value).subscribe({\r\n        next: (movie) => {\r\n          // console.log(recipe);\r\n          this.router.navigate(['/movies', movie._id])\r\n\r\n          this.messageBus.notifyForMessage({\r\n            text: 'User successfully create new movie!',\r\n            type: MessageType.Success\r\n          })\r\n        },\r\n        error: (error) => {\r\n          console.error(error);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}