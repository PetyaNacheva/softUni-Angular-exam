{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MessageType } from 'src/app/core/message-bus.service';\nimport { emailValidator } from '../util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/core/message-bus.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction LoginComponent_ng_container_7_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_ng_container_7_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Email is not valid! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_7_p_1_Template, 2, 0, \"p\", 1);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_7_p_2_Template, 2, 0, \"p\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginFormGroup.controls[\"email\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginFormGroup.controls[\"email\"].errors.email);\n  }\n}\nfunction LoginComponent_ng_container_10_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_ng_container_10_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Password must be at least 5 characters! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_10_p_1_Template, 2, 0, \"p\", 1);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_10_p_2_Template, 2, 0, \"p\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginFormGroup.controls[\"password\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginFormGroup.controls[\"password\"].errors.minlength);\n  }\n}\nconst myRequired = control => {\n  // console.log('validator called');\n  return Validators.required(control);\n};\nexport class LoginComponent {\n  constructor(formBuilder, authService, activatedRoute, messageBus, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.activatedRoute = activatedRoute;\n    this.messageBus = messageBus;\n    this.router = router;\n    this.errorMessage = '';\n    this.loginFormGroup = this.formBuilder.group({\n      email: new FormControl('', {\n        validators: [myRequired, emailValidator],\n        updateOn: 'submit'\n      }),\n      password: new FormControl(null, [Validators.required, Validators.minLength(5)])\n    });\n  }\n  ngOnInit() {\n    // this.loginFormGroup.get('email').valueChanges.subscribe(value => {\n    //   console.log('email changed', value);\n    // })\n  }\n  loginHandler() {\n    // TODO stoimenovg: validate user's data.\n    // this.userService.login();\n    // this.router.navigate(['/home']);\n    // console.log('fromClickHandler', this.loginFormGroup.valid);\n  }\n  handleLogin() {\n    // console.log('fromNgSubmit', this.loginFormGroup.valid);\n    this.errorMessage = '';\n    this.authService.login$(this.loginFormGroup.value).subscribe({\n      next: () => {\n        if (this.activatedRoute.snapshot.queryParams['redirect-to']) {\n          this.router.navigateByUrl(this.activatedRoute.snapshot.queryParams['redirect-to']);\n        } else {\n          this.router.navigate(['/home']);\n        }\n        this.messageBus.notifyForMessage({\n          text: 'User successfully logged in!',\n          type: MessageType.Success\n        });\n      },\n      complete: () => {\n        //console.log('login stream completed')\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MessageBusService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"login\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"field\", \"field-icon\"], [\"formControlName\", \"email\", \"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"john.doe@gmail.com\"], [4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"******\"], [1, \"text-center\"], [\"href\", \"/register\"], [1, \"error\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.handleLogin();\n      });\n      i0.ɵɵelementStart(1, \"fieldset\")(2, \"h2\");\n      i0.ɵɵtext(3, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LoginComponent_p_4_Template, 2, 1, \"p\", 1);\n      i0.ɵɵelementStart(5, \"p\", 2);\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, LoginComponent_ng_container_7_Template, 3, 2, \"ng-container\", 4);\n      i0.ɵɵelementStart(8, \"p\", 2);\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, LoginComponent_ng_container_10_Template, 3, 2, \"ng-container\", 4);\n      i0.ɵɵelementStart(11, \"button\");\n      i0.ɵɵtext(12, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\", 6);\n      i0.ɵɵtext(14, \" Have an account? \");\n      i0.ɵɵelementStart(15, \"a\", 7);\n      i0.ɵɵtext(16, \"Register\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginFormGroup);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFormGroup.controls[\"email\"].touched && ctx.loginFormGroup.controls[\"email\"].invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFormGroup.controls[\"password\"].touched && ctx.loginFormGroup.controls[\"password\"].invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"form.login[_ngcontent-%COMP%]{\\n\\n    display:block;\\n    margin: 60px auto;\\n    text-align: center;\\n    width: 500px;\\n    height: 52vh;\\n}\\n\\n.login[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%] {\\n    border-radius: 8px;\\n    padding: 10px;\\n    background-color: #ffffff;\\n}\\n\\n.login[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{\\n    padding-top: 0;\\n    border-bottom: none;\\n}\\n\\n.login[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{\\n    padding-bottom: 0;\\n    padding-top: 10px;\\n    margin: 20px;\\n}\\n\\n.login[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    flex: 0 1 100%;\\n    border: 1px solid;\\n    padding: 10px;\\n    border-left: 4px solid green;\\n    border-top-right-radius: 4px;\\n    border-bottom-right-radius: 4px;\\n}\\n\\n.login[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n    border-color: black;\\n}\\n\\n.login[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{\\n    color: white;\\n    border: none;\\n    border-radius: 0.3em;\\n    padding: 0.6em 1.2em;\\n    margin-top: 1.5rem;\\n    width: 60%;\\n    outline: none;\\n}\\n\\n.login[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    border: 1px solid;\\n    border-right: none;\\n    padding: 0.55em;\\n    border-top-left-radius: 0.3em;\\n    border-bottom-left-radius: 0.3em;\\n    background-color: #e9ecef;\\n}\\n\\n.login[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    color: #007bff;\\n}\\n\\n.login[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{\\n    cursor: pointer;\\n}\\n\\n\\n.login[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%] {\\n    display: flex;\\n    padding-bottom: 0;\\n}\\n\\n\\n\\np.error[_ngcontent-%COMP%] {\\n    text-align: left;\\n    border-radius: 0.3em;\\n    color: red;\\n    padding-top: 0;\\n}\\n\\n.input-error[_ngcontent-%COMP%] {\\n    border-left-color: red;\\n}\\n/*# sourceURL=webpack://./src/app/auth/login/login.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUF5Qjs7QUFFekI7O0lBRUksYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYiw0QkFBNEI7SUFDNUIsNEJBQTRCO0lBQzVCLCtCQUErQjtBQUNuQzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZiw2QkFBNkI7SUFDN0IsZ0NBQWdDO0lBQ2hDLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COzs7QUFHQTtJQUNJLGFBQWE7SUFDYixpQkFBaUI7QUFDckI7O0FBRUEsWUFBWTs7QUFFWjtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKmxvZ2luIHJlZ2lzdGVyIGZvcm1zICAqL1xuXG5mb3JtLmxvZ2lue1xuXG4gICAgZGlzcGxheTpibG9jaztcbiAgICBtYXJnaW46IDYwcHggYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIGhlaWdodDogNTJ2aDtcbn1cblxuLmxvZ2luIGZpZWxkc2V0IHtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4ubG9naW4gaDJ7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbn1cblxuLmxvZ2luIHB7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgbWFyZ2luOiAyMHB4O1xufVxuXG4ubG9naW4gaW5wdXR7XG4gICAgZmxleDogMCAxIDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQ7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIGdyZWVuO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDtcbn1cblxuLmxvZ2luIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcbn1cblxuLmxvZ2luIGJ1dHRvbntcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xuICAgIHBhZGRpbmc6IDAuNmVtIDEuMmVtO1xuICAgIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgICB3aWR0aDogNjAlO1xuICAgIG91dGxpbmU6IG5vbmU7XG59XG5cbi5sb2dpbiBpIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgcGFkZGluZzogMC41NWVtO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAuM2VtO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAuM2VtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG59XG5cbi5sb2dpbiBhIHtcbiAgICBjb2xvcjogIzAwN2JmZjtcbn1cblxuLmxvZ2luIGE6aG92ZXJ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5cbi5sb2dpbiAuZmllbGQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG59XG5cbi8qIGVycm9ycyAgKi9cblxucC5lcnJvciB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcbiAgICBjb2xvcjogcmVkO1xuICAgIHBhZGRpbmctdG9wOiAwO1xufVxuXG4uaW5wdXQtZXJyb3Ige1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAuCA,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAGjG,SAA4BC,WAAW,QAAQ,kCAAkC;AAEjF,SAASC,cAAc,QAAQ,SAAS;;;;;;;;;ICFhCC,4BAAsC;IAAAA,YAAgB;IAAAA,iBAAI;;;;IAApBA,eAAgB;IAAhBA,yCAAgB;;;;;IAOlDA,4BAA0E;IACtEA,oCACJ;IAAAA,iBAAI;;;;;IAEJA,4BAAuE;IACnEA,qCACJ;IAAAA,iBAAI;;;;;IAPRA,6BAA2G;IACvGA,0EAEI;IAEJA,0EAEI;IACRA,0BAAe;;;;IAPPA,eAAsD;IAAtDA,8EAAsD;IAItDA,eAAmD;IAAnDA,2EAAmD;;;;;IAYvDA,4BAA6E;IACzEA,uCACJ;IAAAA,iBAAI;;;;;IACJA,4BAA8E;IAC1EA,yDACJ;IAAAA,iBAAI;;;;;IAPRA,6BACuG;IACnGA,2EAEI;IACJA,2EAEI;IACRA,0BAAe;;;;IANPA,eAAyD;IAAzDA,iFAAyD;IAGzDA,eAA0D;IAA1DA,kFAA0D;;;ADtB1E,MAAMC,UAAU,GAAIC,OAAwB,IAAI;EAC9C;EACA,OAAOL,UAAU,CAACM,QAAQ,CAACD,OAAO,CAAC;AACrC,CAAC;AAOD,OAAM,MAAOE,cAAc;EAQzBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,cAA8B,EAC9BC,UAA6B,EAC7BC,MAAc;IAJd,gBAAW,GAAXJ,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,eAAU,GAAVC,UAAU;IACV,WAAM,GAANC,MAAM;IAZhB,iBAAY,GAAW,EAAE;IAEzB,mBAAc,GAAc,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjDC,KAAK,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE;QAAEiB,UAAU,EAAE,CAACZ,UAAU,EAAEF,cAAc,CAAC;QAAEe,QAAQ,EAAE;MAAQ,CAAE,CAAC;MAC5FC,QAAQ,EAAE,IAAInB,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACmB,SAAS,CAAC,CAAC,CAAC,CAAC;KAC/E,CAAC;EAO0B;EAE5BC,QAAQ;IAEN;IACA;IACA;EAAA;EAGFC,YAAY;IACV;IACA;IACA;IAEA;EAAA;EAGFC,WAAW;IACT;IAEA,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACb,WAAW,CAACc,MAAM,CAAC,IAAI,CAACC,cAAc,CAACC,KAAK,CAAC,CAACC,SAAS,CAAC;MAC3DC,IAAI,EAAE,MAAK;QACT,IAAI,IAAI,CAACjB,cAAc,CAACkB,QAAQ,CAACC,WAAW,CAAC,aAAa,CAAC,EAAE;UAC3D,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,IAAI,CAACpB,cAAc,CAACkB,QAAQ,CAACC,WAAW,CAAC,aAAa,CAAC,CAAC;SACnF,MAAM;UACL,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;QAGjC,IAAI,CAACpB,UAAU,CAACqB,gBAAgB,CAAC;UAAEC,IAAI,EAAE,8BAA8B;UAAEC,IAAI,EAAElC,WAAW,CAACmC;QAAO,CAAE,CAAC;MACvG,CAAC;MACDC,QAAQ,EAAE,MAAK;QACb;MAAA,CACD;MACDC,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAAChB,YAAY,GAAGgB,GAAG,CAACD,KAAK,CAACE,OAAO;MACvC;KACD,CAAC;EACJ;;;mBAnDWjC,cAAc;AAAA;;QAAdA,cAAc;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClB3B1C,+BAA4E;MAA3BA;QAAA,OAAY2C,iBAAa;MAAA,EAAC;MACvE3C,gCAAU;MACFA,0BAAU;MAAAA,iBAAK;MAEnBA,2DAA0D;MAE1DA,4BAA4B;MAExBA,2BAAqG;MACzGA,iBAAI;MACJA,iFAQe;MAEfA,4BAA4B;MAExBA,2BAAqG;MACzGA,iBAAI;MAEJA,mFAQe;MAEfA,+BAAQ;MAAAA,sBAAK;MAAAA,iBAAS;MAEtBA,6BAAuB;MACnBA,mCACA;MAAAA,6BAAoB;MAAAA,yBAAQ;MAAAA,iBAAI;;;MAvCxBA,8CAA4B;MAIpCA,eAAkB;MAAlBA,uCAAkB;MAMPA,eAA0F;MAA1FA,mHAA0F;MAgBpGA,eAAgG;MAAhGA,yHAAgG","names":["FormControl","Validators","MessageType","emailValidator","i0","myRequired","control","required","LoginComponent","constructor","formBuilder","authService","activatedRoute","messageBus","router","group","email","validators","updateOn","password","minLength","ngOnInit","loginHandler","handleLogin","errorMessage","login$","loginFormGroup","value","subscribe","next","snapshot","queryParams","navigateByUrl","navigate","notifyForMessage","text","type","Success","complete","error","err","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\auth\\login\\login.component.ts","D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { MessageBusService, MessageType } from 'src/app/core/message-bus.service';\nimport { UserService } from 'src/app/core/user.service';\nimport { emailValidator } from '../util';\n\nconst myRequired = (control: AbstractControl) => {\n  // console.log('validator called');\n  return Validators.required(control);\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  errorMessage: string = '';\n\n  loginFormGroup: FormGroup = this.formBuilder.group({\n    email: new FormControl('', { validators: [myRequired, emailValidator], updateOn: 'submit' }),\n    password: new FormControl(null, [Validators.required, Validators.minLength(5)])\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private messageBus: MessageBusService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    // this.loginFormGroup.get('email').valueChanges.subscribe(value => {\n    //   console.log('email changed', value);\n    // })\n  }\n\n  loginHandler(): void {\n    // TODO stoimenovg: validate user's data.\n    // this.userService.login();\n    // this.router.navigate(['/home']);\n\n    // console.log('fromClickHandler', this.loginFormGroup.valid);\n  }\n\n  handleLogin(): void {\n    // console.log('fromNgSubmit', this.loginFormGroup.valid);\n\n    this.errorMessage = '';\n    this.authService.login$(this.loginFormGroup.value).subscribe({\n      next: () => {\n        if (this.activatedRoute.snapshot.queryParams['redirect-to']) {\n          this.router.navigateByUrl(this.activatedRoute.snapshot.queryParams['redirect-to'])\n        } else {\n          this.router.navigate(['/home']);\n        }\n\n        this.messageBus.notifyForMessage({ text: 'User successfully logged in!', type: MessageType.Success })\n      },\n      complete: () => {\n        //console.log('login stream completed')\n      },\n      error: (err) => {\n        this.errorMessage = err.error.message;\n      }\n    });\n  }\n}\n","<form class=\"login\" [formGroup]=\"loginFormGroup\" (ngSubmit)=\"handleLogin()\">\n    <fieldset>\n        <h2>Login Form</h2>\n\n        <p *ngIf=\"errorMessage\" class=\"error\">{{errorMessage}}</p>\n\n        <p class=\"field field-icon\">\n            <!-- <label for=\"email\"><span><i class=\"fas fa-envelope\"></i></span></label> -->\n            <input formControlName=\"email\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"john.doe@gmail.com\">\n        </p>\n        <ng-container *ngIf=\"loginFormGroup.controls['email'].touched && loginFormGroup.controls['email'].invalid\">\n            <p *ngIf=\"loginFormGroup.controls['email'].errors.required\" class=\"error\">\n                Email is required!\n            </p>\n\n            <p *ngIf=\"loginFormGroup.controls['email'].errors.email\" class=\"error\">\n                Email is not valid!\n            </p>\n        </ng-container>\n\n        <p class=\"field field-icon\">\n            <!-- <label for=\"password\"><span><i class=\"fas fa-lock\"></i></span></label> -->\n            <input formControlName=\"password\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"******\">\n        </p>\n\n        <ng-container\n            *ngIf=\"loginFormGroup.controls['password'].touched && loginFormGroup.controls['password'].invalid\">\n            <p *ngIf=\"loginFormGroup.controls['password'].errors.required\" class=\"error\">\n                Password is required!\n            </p>\n            <p *ngIf=\"loginFormGroup.controls['password'].errors.minlength\" class=\"error\">\n                Password must be at least 5 characters!\n            </p>\n        </ng-container>\n        \n        <button>Login</button>\n\n        <p class=\"text-center\">\n            Have an account?\n            <a href=\"/register\">Register</a>\n        </p>\n\n    </fieldset>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}