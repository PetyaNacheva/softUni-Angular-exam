{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { enterEditMode, exitEditMode, profilePageInitialize, updateProfileStarted } from '../+store/actions';\nimport { trigger, style, animate, transition, query, stagger } from '@angular/animations';\nlet ProfileComponent = class ProfileComponent {\n  constructor(userService, router, recipeService, store) {\n    this.userService = userService;\n    this.router = router;\n    this.recipeService = recipeService;\n    this.store = store;\n    this.currentUser$ = this.store.select(state => state.auth.profile.currentProfile);\n    // or:\n    // currentUser: IUser;\n    // .pipe(tap(profile => this.currentUser = profile));\n    this.isInEditMode$ = this.store.select(state => state.auth.profile.isInEditMode);\n    this.hasErrorHappened = this.store.select(state => state.auth.profile.errorHappened);\n    this.userRecipes = [];\n    this.isShowRecipes = false;\n    this.isLikedShow = false;\n    this.likedRecipes = [];\n    this.isDisabled = true;\n  }\n  ngOnInit() {\n    this.store.dispatch(profilePageInitialize());\n    this.hasErrorHappened.subscribe(hasError => {\n      if (hasError) {\n        this.router.navigate(['/login']);\n      }\n    });\n    // this.userService.getProfile$().subscribe({\n    //   next: (user) => {\n    //     this.store.dispatch(profileLoaded({ profile: user }));\n    //   },\n    //   error: (error) => {\n    //     this.router.navigate(['/login']);\n    //   }\n    // })\n  }\n\n  enterEditMode(currentUser) {\n    this.store.dispatch(enterEditMode());\n    setTimeout(() => {\n      this.editProfileForm.form.patchValue({\n        email: currentUser.email,\n        username: currentUser.username\n      });\n    });\n  }\n  exitEditMode() {\n    this.store.dispatch(exitEditMode());\n  }\n  showUserRecipes(currentUser, action) {\n    if (action == 'show') {\n      // console.log(this.currentUser._id)\n      this.recipeService.getAllRecipesByUser$(currentUser._id).subscribe({\n        next: recipes => {\n          // console.log(recipes)\n          this.userRecipes = recipes;\n          this.isShowRecipes = !this.isShowRecipes;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    } else if (action == 'hide') {\n      this.isShowRecipes = !this.isShowRecipes;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n  updateProfile() {\n    // console.log(this.editProfileForm.value);\n    this.store.dispatch(updateProfileStarted({\n      user: {\n        username: this.editProfileForm.value.username,\n        email: this.editProfileForm.value.email\n      }\n    }));\n    this.store.dispatch(exitEditMode());\n  }\n  showLikedByUserRecipes(currentUser, action) {\n    if (action == 'show') {\n      this.recipeService.getAllLikedByUser$(currentUser._id).subscribe({\n        next: recipes => {\n          console.log(recipes);\n          this.likedRecipes = recipes;\n          this.isLikedShow = !this.isLikedShow;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    } else if (action == 'hide') {\n      this.isLikedShow = !this.isLikedShow;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n};\n__decorate([ViewChild('editProfileForm')], ProfileComponent.prototype, \"editProfileForm\", void 0);\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  animations: [trigger('itemAnimation', [transition('* => *', [query('div', style({\n    transform: 'translateX(-100%)'\n  })), query('div', stagger('100ms', [animate('300ms', style({\n    transform: 'translateX(0)'\n  }))]))])])]\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","enterEditMode","exitEditMode","profilePageInitialize","updateProfileStarted","trigger","style","animate","transition","query","stagger","ProfileComponent","constructor","userService","router","recipeService","store","select","state","auth","profile","currentProfile","isInEditMode","errorHappened","ngOnInit","dispatch","hasErrorHappened","subscribe","hasError","navigate","currentUser","setTimeout","editProfileForm","form","patchValue","email","username","showUserRecipes","action","getAllRecipesByUser$","_id","next","recipes","userRecipes","isShowRecipes","isDisabled","error","console","log","updateProfile","user","value","showLikedByUserRecipes","getAllLikedByUser$","likedRecipes","isLikedShow","__decorate","selector","templateUrl","styleUrls","animations","transform"],"sourceRoot":"","sources":["D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\auth\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { IRecipe, IUser } from 'src/app/core/interfaces';\nimport { RecipeService } from 'src/app/core/recipe.service';\nimport { UserService } from 'src/app/core/user.service';\nimport { IAuthModuleState } from '../+store';\nimport { enterEditMode, exitEditMode, profilePageInitialize, updateProfileStarted } from '../+store/actions';\nimport { trigger, style, animate, transition, query, stagger } from '@angular/animations'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  animations: [\n    trigger('itemAnimation', [\n      transition('* => *', [\n        query('div', style({ transform: 'translateX(-100%)' })),\n        query('div',\n          stagger('100ms', [\n            animate('300ms', style({ transform: 'translateX(0)' }))\n          ]))\n      ])\n    ])\n  ]\n})\nexport class ProfileComponent implements OnInit {\n\n  @ViewChild('editProfileForm') editProfileForm: NgForm;\n\n  currentUser$: Observable<IUser> = this.store.select(state => state.auth.profile.currentProfile)\n  // or:\n  // currentUser: IUser;\n  // .pipe(tap(profile => this.currentUser = profile));\n\n  isInEditMode$: Observable<boolean> = this.store.select(state => state.auth.profile.isInEditMode);\n\n  hasErrorHappened: Observable<boolean> = this.store.select(state => state.auth.profile.errorHappened);\n\n  userRecipes: IRecipe[] = [];\n\n  isShowRecipes: boolean = false;\n\n  isLikedShow: boolean = false;\n  likedRecipes: IRecipe[] = [];\n\n  isDisabled: boolean = true;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private recipeService: RecipeService,\n    private store: Store<IAuthModuleState>\n  ) { }\n\n\n  ngOnInit(): void {\n    this.store.dispatch(profilePageInitialize());\n\n    this.hasErrorHappened.subscribe((hasError) => {\n      if (hasError) {\n        this.router.navigate(['/login']);\n      }\n    })\n\n    // this.userService.getProfile$().subscribe({\n    //   next: (user) => {\n    //     this.store.dispatch(profileLoaded({ profile: user }));\n    //   },\n    //   error: (error) => {\n    //     this.router.navigate(['/login']);\n    //   }\n    // })\n  }\n\n  enterEditMode(currentUser: IUser): void {\n    this.store.dispatch(enterEditMode());\n\n    setTimeout(() => {\n      this.editProfileForm.form.patchValue({\n        email: currentUser.email,\n        username: currentUser.username\n      })\n    });\n  }\n\n  exitEditMode(): void {\n    this.store.dispatch(exitEditMode());\n  }\n\n  showUserRecipes(currentUser: IUser, action: string) {\n\n    if (action == 'show') {\n      // console.log(this.currentUser._id)\n      this.recipeService.getAllRecipesByUser$(currentUser._id).subscribe({\n        next: (recipes) => {\n          // console.log(recipes)\n          this.userRecipes = recipes;\n          this.isShowRecipes = !this.isShowRecipes;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: (error) => {\n          console.log(error);\n        }\n      })\n    } else if (action == 'hide') {\n      this.isShowRecipes = !this.isShowRecipes;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n\n  updateProfile(): void {\n    // console.log(this.editProfileForm.value);\n\n    this.store.dispatch(updateProfileStarted({\n      user: {\n        username: this.editProfileForm.value.username,\n        email: this.editProfileForm.value.email\n      }\n    }));\n\n    this.store.dispatch(exitEditMode());\n  }\n\n  showLikedByUserRecipes(currentUser: IUser, action: string) {\n    if (action == 'show') {\n      this.recipeService.getAllLikedByUser$(currentUser._id).subscribe({\n        next: (recipes) => {\n          console.log(recipes)\n          this.likedRecipes = recipes;\n          this.isLikedShow = !this.isLikedShow;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: (error) => {\n          console.log(error);\n        }\n      })\n    } else if (action == 'hide') {\n      this.isLikedShow = !this.isLikedShow;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}