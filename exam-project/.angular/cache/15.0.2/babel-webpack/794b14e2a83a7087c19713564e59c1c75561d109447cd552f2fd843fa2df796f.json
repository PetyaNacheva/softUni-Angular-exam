{"ast":null,"code":"export function emailValidator(control) {\n  const value = control.value;\n  if (!value) {\n    return null;\n  }\n  if (!/.{4,}@[a-z]{3,}\\.(bg|com)/.test(value)) {\n    return {\n      email: true\n    };\n  }\n  return null;\n}\nexport function passwordMatch(passwordFormControl) {\n  const validtorFn = rePasswordFormControl => {\n    if (passwordFormControl.value !== rePasswordFormControl.value) {\n      return {\n        passwordMissmatch: true\n      };\n    }\n    return null;\n  };\n  return validtorFn;\n}\nexport function passwordMatch2(passwordFormControl) {\n  const passwordGroup = passwordFormControl.parent;\n  if (!passwordGroup) {\n    return null;\n  }\n  const {\n    password,\n    rePassword\n  } = passwordGroup.controls;\n  if (password.value !== rePassword.value) {\n    return {\n      passwordMatch2: true\n    };\n  }\n  return null;\n}\nexport function nameValidator(control) {\n  const name = control.value;\n  if (!/\\s{1,}/.test(name)) {\n    return null;\n  }\n  return {\n    username: true\n  };\n  return null;\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,cAAc,CAACC,OAAwB;EACnD,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAE3B,IAAI,CAACA,KAAK,EAAE;IACR,OAAO,IAAI;;EAGf,IAAI,CAAC,2BAA2B,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;IAC1C,OAAO;MACHE,KAAK,EAAE;KACV;;EAEL,OAAO,IAAI;AACf;AAGA,OAAM,SAAUC,aAAa,CAACC,mBAAoC;EAC9D,MAAMC,UAAU,GAAiBC,qBAAsC,IAAI;IACvE,IAAIF,mBAAmB,CAACJ,KAAK,KAAKM,qBAAqB,CAACN,KAAK,EAAE;MAC3D,OAAO;QACHO,iBAAiB,EAAE;OACtB;;IAGL,OAAO,IAAI;EACf,CAAC;EAED,OAAOF,UAAU;AACrB;AAEA,OAAM,SAAUG,cAAc,CAACJ,mBAAoC;EAC/D,MAAMK,aAAa,GAAGL,mBAAmB,CAACM,MAAmB;EAE7D,IAAI,CAACD,aAAa,EAAE;IAChB,OAAO,IAAI;;EAGf,MAAM;IAAEE,QAAQ;IAAEC;EAAU,CAAE,GAAGH,aAAa,CAACI,QAAQ;EACvD,IAAIF,QAAQ,CAACX,KAAK,KAAKY,UAAU,CAACZ,KAAK,EAAE;IACrC,OAAO;MACHQ,cAAc,EAAE;KACnB;;EAGL,OAAO,IAAI;AACf;AAEA,OAAM,SAAUM,aAAa,CAACf,OAAwB;EAClD,MAAMgB,IAAI,GAAGhB,OAAO,CAACC,KAAK;EAE1B,IAAI,CAAC,QAAQ,CAACC,IAAI,CAACc,IAAI,CAAC,EAAE;IACtB,OAAO,IAAI;;EAEf,OAAO;IACHC,QAAQ,EAAE;GACb;EACD,OAAO,IAAI;AAEf","names":["emailValidator","control","value","test","email","passwordMatch","passwordFormControl","validtorFn","rePasswordFormControl","passwordMissmatch","passwordMatch2","passwordGroup","parent","password","rePassword","controls","nameValidator","name","username"],"sourceRoot":"","sources":["D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\auth\\util.ts"],"sourcesContent":["import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function emailValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n\n    if (!value) {\n        return null\n    }\n\n    if (!/.{4,}@[a-z]{3,}\\.(bg|com)/.test(value)) {\n        return {\n            email: true,\n        }\n    }\n    return null;\n}\n\n\nexport function passwordMatch(passwordFormControl: AbstractControl) {\n    const validtorFn: ValidatorFn = (rePasswordFormControl: AbstractControl) => {\n        if (passwordFormControl.value !== rePasswordFormControl.value) {\n            return {\n                passwordMissmatch: true\n            }\n        }\n\n        return null;\n    }\n\n    return validtorFn;\n}\n\nexport function passwordMatch2(passwordFormControl: AbstractControl): ValidationErrors | null {\n    const passwordGroup = passwordFormControl.parent as FormGroup;\n\n    if (!passwordGroup) {\n        return null;\n    }\n\n    const { password, rePassword } = passwordGroup.controls;\n    if (password.value !== rePassword.value) {\n        return {\n            passwordMatch2: true\n        }\n    }\n\n    return null;\n}\n\nexport function nameValidator(control: AbstractControl): ValidationErrors | null{\n    const name = control.value;\n\n    if (!/\\s{1,}/.test(name)) {\n        return null;\n    }\n    return {\n        username: true,\n    }\n    return null;\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}