{"ast":null,"code":"export function actorsValidator(control) {\n  const value = control.value.trim();\n  if (!value) {\n    return null;\n  }\n  if (value.length > 1 && value.includes(',')) {\n    const arr = value.split(',\\n');\n    if (arr.length > 1) {\n      return null;\n    }\n    return {\n      actorsLength: true\n    };\n  } else {\n    return {\n      actors: true\n    };\n  }\n}\nexport function urlValidator(control) {\n  const value = control.value;\n  if (!value) {\n    return null;\n  }\n  if (!/^https?:\\/\\/(.+)/.test(value)) {\n    return {\n      urlV: true\n    };\n  }\n  return null;\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,eAAe,CAACC,OAAwB;EACpD,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACC,IAAI,EAAE;EAElC,IAAI,CAACD,KAAK,EAAE;IACR,OAAO,IAAI;;EAGf,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,IAAIF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;IACzC,MAAMC,GAAG,GAAGJ,KAAK,CAACK,KAAK,CAAC,KAAK,CAAC;IAC9B,IAAID,GAAG,CAACF,MAAM,GAAG,CAAC,EAAE;MAChB,OAAO,IAAI;;IAEf,OAAO;MAAEI,YAAY,EAAE;IAAI,CAAE;GAChC,MAAM;IACH,OAAO;MAAEC,MAAM,EAAE;IAAI,CAAE;;AAE/B;AAEA,OAAM,SAAUC,YAAY,CAACT,OAAwB;EACjD,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAE3B,IAAI,CAACA,KAAK,EAAE;IACR,OAAO,IAAI;;EAGf,IAAI,CAAC,kBAAkB,CAACS,IAAI,CAACT,KAAK,CAAC,EAAE;IACjC,OAAO;MACHU,IAAI,EAAE;KACT;;EAGL,OAAO,IAAI;AACf","names":["actorsValidator","control","value","trim","length","includes","arr","split","actorsLength","actors","urlValidator","test","urlV"],"sourceRoot":"","sources":["D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\feature\\movies\\utils.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\nexport function actorsValidator(control: AbstractControl): ValidationErrors | null {\r\n    const value = control.value.trim();\r\n\r\n    if (!value) {\r\n        return null;\r\n    }\r\n\r\n    if (value.length > 1 && value.includes(',')) {\r\n        const arr = value.split(',\\n');\r\n        if (arr.length > 1) {\r\n            return null;\r\n        }\r\n        return { actorsLength: true };\r\n    } else {\r\n        return { actors: true };\r\n    }\r\n}\r\n\r\nexport function urlValidator(control: AbstractControl): ValidationErrors | null {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n        return null;\r\n    }\r\n\r\n    if (!/^https?:\\/\\/(.+)/.test(value)) {\r\n        return {\r\n            urlV: true,\r\n        }\r\n    }\r\n\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}