{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { enterEditMode, exitEditMode, profilePageInitalized, updateProfileStarted } from '../+store/actions';\nimport { trigger, style, animate, transition, query, stagger } from '@angular/animations';\nlet ProfileComponent = class ProfileComponent {\n  constructor(userService, movieService, router, store) {\n    this.userService = userService;\n    this.movieService = movieService;\n    this.router = router;\n    this.store = store;\n    this.currentUser$ = this.store.select(state => state.auth.profile.currentProfile);\n    this.isInEditMode$ = this.store.select(state => state.auth.profile.isInEditMode);\n    this.hasErrorHappened = this.store.select(state => state.auth.profile.errorHappened);\n    this.userMovies = [];\n    this.isShowMovies = false;\n    this.isLikedShow = false;\n    this.likedMovies = [];\n    this.isDisabled = true;\n  }\n  ngOnInit() {\n    this.store.dispatch(profilePageInitalized());\n    this.hasErrorHappened.subscribe(hasError => {\n      if (hasError) {\n        this.router.navigate(['/user/login']);\n      }\n    });\n  }\n  enterEditMode(currentUser) {\n    this.store.dispatch(enterEditMode());\n    setTimeout(() => {\n      this.editProfileForm.form.patchValue({\n        email: currentUser.email,\n        username: currentUser.username\n      });\n    });\n  }\n  showUserMovies(currentUser, action) {\n    if (action == 'show') {\n      // console.log(this.currentUser._id)\n      this.movieService.getAllMoviesByUser$(currentUser._id).subscribe({\n        next: movies => {\n          // console.log(recipes)\n          this.userMovies = movies;\n          this.isShowMovies = !this.isShowMovies;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    } else if (action == 'hide') {\n      this.isShowMovies = !this.isShowMovies;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n  updateProfile() {\n    this.store.dispatch(updateProfileStarted({\n      user: {\n        username: this.editProfileForm.value.username,\n        email: this.editProfileForm.value.email,\n        profilePicture: this.newProfilePicture\n      }\n    }));\n  }\n  exitEditMode() {\n    this.store.dispatch(exitEditMode());\n  }\n  handleProfilePictureChange(event) {\n    const input = event.target;\n    this.newProfilePicture = input.files[0];\n    console.log(this.newProfilePicture);\n  }\n  showLikedByUseMovies(currentUser, action) {\n    if (action == 'show') {\n      this.movieService.getAllLikedByUser$(currentUser._id).subscribe({\n        next: movies => {\n          console.log(movies);\n          this.likedMovies = movies;\n          this.isLikedShow = !this.isLikedShow;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    } else if (action == 'hide') {\n      this.isLikedShow = !this.isLikedShow;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n};\n__decorate([ViewChild('editProfileForm')], ProfileComponent.prototype, \"editProfileForm\", void 0);\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  animations: [trigger('itemAnimation', [transition('* => *', [query('div', style({\n    transform: 'translateX(-100%)'\n  })), query('div', stagger('100ms', [animate('300ms', style({\n    transform: 'translateX(0)'\n  }))]))])])]\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","enterEditMode","exitEditMode","profilePageInitalized","updateProfileStarted","trigger","style","animate","transition","query","stagger","ProfileComponent","constructor","userService","movieService","router","store","select","state","auth","profile","currentProfile","isInEditMode","errorHappened","ngOnInit","dispatch","hasErrorHappened","subscribe","hasError","navigate","currentUser","setTimeout","editProfileForm","form","patchValue","email","username","showUserMovies","action","getAllMoviesByUser$","_id","next","movies","userMovies","isShowMovies","isDisabled","error","console","log","updateProfile","user","value","profilePicture","newProfilePicture","handleProfilePictureChange","event","input","target","files","showLikedByUseMovies","getAllLikedByUser$","likedMovies","isLikedShow","__decorate","selector","templateUrl","styleUrls","animations","transform"],"sourceRoot":"","sources":["D:\\Softuni\\softUni-Angular\\exam-project\\src\\app\\auth\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { IUser } from 'src/app/core/interfaces';\nimport { IMovie } from 'src/app/core/interfaces';\nimport { IAuthModuleState } from '../+store';\nimport { MovieService } from 'src/app/core/movie.service';\nimport { UserService } from 'src/app/core/user.service';\nimport { enterEditMode, exitEditMode, profilePageInitalized, updateProfileStarted } from '../+store/actions';\nimport { trigger, style, animate, transition, query, stagger } from '@angular/animations'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  animations: [\n    trigger('itemAnimation', [\n      transition('* => *', [\n        query('div', style({ transform: 'translateX(-100%)' })),\n        query('div',\n          stagger('100ms', [\n            animate('300ms', style({ transform: 'translateX(0)' }))\n          ]))\n      ])\n    ])\n  ]\n})\nexport class ProfileComponent implements OnInit {\n\n  @ViewChild('editProfileForm') editProfileForm: NgForm;\n\n  currentUser$: Observable<IUser> = this.store.select(state => state.auth.profile.currentProfile)\n\n  newProfilePicture?: File\n\n  isInEditMode$: Observable<boolean> = this.store.select(state => state.auth.profile.isInEditMode);\n\n  hasErrorHappened: Observable<boolean> = this.store.select(state => state.auth.profile.errorHappened);\n\n  userMovies: IMovie[] = [];\n\n  isShowMovies: boolean = false;\n\n  isLikedShow: boolean = false;\n  likedMovies: IMovie[] = [];\n\n  isDisabled: boolean = true;\n\n  constructor(\n    private userService: UserService,\n    private movieService: MovieService,\n    private router: Router,\n    private store: Store<IAuthModuleState>) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(profilePageInitalized());\n\n    this.hasErrorHappened.subscribe((hasError) => {\n      if (hasError) {\n        this.router.navigate(['/user/login'])\n      }\n    })\n  }\n\n  enterEditMode(currentUser: IUser): void {\n    this.store.dispatch(enterEditMode());\n\n    setTimeout(() => {\n      this.editProfileForm.form.patchValue({\n        email: currentUser.email,\n        username: currentUser.username,\n      })\n    });\n  }\n\n  showUserMovies(currentUser: IUser, action: string) {\n\n    if (action == 'show') {\n      // console.log(this.currentUser._id)\n      this.movieService.getAllMoviesByUser$(currentUser._id).subscribe({\n        next: (movies) => {\n          // console.log(recipes)\n          this.userMovies = movies;\n          this.isShowMovies = !this.isShowMovies;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: (error) => {\n          console.log(error);\n        }\n      })\n    } else if (action == 'hide') {\n      this.isShowMovies = !this.isShowMovies;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n\n  updateProfile(): void {\n    this.store.dispatch(updateProfileStarted({\n      user: {\n        username: this.editProfileForm.value.username,\n        email: this.editProfileForm.value.email,\n        profilePicture: this.newProfilePicture\n      }\n      \n    }));\n  }\n\n\n  exitEditMode(): void {\n    this.store.dispatch(exitEditMode());\n  }\n\n  handleProfilePictureChange(event: InputEvent){\n    const input: HTMLInputElement = event.target as HTMLInputElement;\n    this.newProfilePicture = input.files[0]\n    console.log(this.newProfilePicture)\n\n  }\n\n  showLikedByUseMovies(currentUser: IUser, action: string) {\n    if (action == 'show') {\n      this.movieService.getAllLikedByUser$(currentUser._id).subscribe({\n        next: (movies) => {\n          console.log(movies)\n          this.likedMovies = movies;\n          this.isLikedShow = !this.isLikedShow;\n          this.isDisabled = !this.isDisabled;\n        },\n        error: (error) => {\n          console.log(error);\n        }\n      })\n    } else if (action == 'hide') {\n      this.isLikedShow = !this.isLikedShow;\n      this.isDisabled = !this.isDisabled;\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}